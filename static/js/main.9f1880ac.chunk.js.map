{"version":3,"sources":["Answer.tsx","Numbers.tsx","ResultItem.tsx","Result.tsx","Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Answer","number","className","Numbers","clickEnabled","onClickNumber","isShowBackButton","onClickBack","Button","variant","onClick","Array","fill","map","_","index","disabled","ResultItem","answer","strike","filter","e","length","ball","includes","concat","classNames","Result","numberList","Game","useState","answerNumber","setAnswerNumber","curNumber","setCurNumber","setNumberList","setClickEnabled","useEffect","console","log","updateAnswerNumber","arr","i","n","Math","floor","random","push","init","newNumber","newNumberList","setTimeout","join","alert","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f1880ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n  number: number[];\r\n}\r\n\r\nconst Answer: React.FC<Props> = ({ number }) => {\r\n  return (\r\n    <div className=\"answer\">\r\n      <div className=\"answer-item\">{number[0]}</div>\r\n      <div className=\"answer-item\">{number[1]}</div>\r\n      <div className=\"answer-item\">{number[2]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\ninterface Prop {\r\n  clickEnabled: boolean;\r\n  onClickNumber: Function;\r\n  isShowBackButton: boolean;\r\n  onClickBack: Function;\r\n}\r\n\r\n/**\r\n * 하단 숫자판\r\n */\r\nconst Numbers: React.FC<Prop> = ({\r\n  clickEnabled,\r\n  onClickNumber,\r\n  isShowBackButton,\r\n  onClickBack\r\n}) => {\r\n  return (\r\n    <div className=\"numbers\">\r\n      <div>\r\n        {isShowBackButton && (\r\n          <Button\r\n            variant=\"danger\"\r\n            className=\"btn-back\"\r\n            onClick={() => onClickBack()}\r\n          >\r\n            ←\r\n          </Button>\r\n        )}\r\n\r\n        <div className=\"numbers-grid\">\r\n          {Array(10)\r\n            .fill(0)\r\n            .map((_, index) => (\r\n              <Button\r\n                key={index}\r\n                disabled={!clickEnabled}\r\n                onClick={() => onClickNumber(index)}\r\n              >\r\n                {index}\r\n              </Button>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  answer: number[];\r\n  number: number[];\r\n}\r\n\r\nconst ResultItem: React.FC<Props> = ({ answer, number }) => {\r\n  const strike = () => {\r\n    return answer.filter((e, index) => e === number[index]).length;\r\n  };\r\n\r\n  const ball = () => {\r\n    return number.filter(e => answer.includes(e)).length - strike();\r\n  };\r\n\r\n  const result = () => {\r\n    return Array(strike())\r\n      .fill(0)\r\n      .map(_ => \"S\")\r\n      .concat(\r\n        Array(ball())\r\n          .fill(0)\r\n          .map(_ => \"B\")\r\n      )\r\n      .concat(\r\n        Array(3 - strike() - ball())\r\n          .fill(0)\r\n          .map(_ => \"OUT\")\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-item\">\r\n      <div>\r\n        {number.map((e, index) => (\r\n          <span key={index}>{e}</span>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {result().map((e, index) => (\r\n          <span key={index} className={classNames([e, `item-${index + 1}`])}>\r\n            {e}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultItem;\r\n","import React from \"react\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\ninterface Props {\r\n  answer: number[];\r\n  numberList: number[][];\r\n}\r\n\r\nconst Result: React.FC<Props> = ({ answer, numberList }) => {\r\n  return (\r\n    <div className=\"result my-3 flex-fill\">\r\n      {numberList.map((e, index) => (\r\n        <ResultItem key={index} answer={answer} number={e} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport Numbers from \"./Numbers\";\r\nimport Result from \"./Result\";\r\n\r\nconst Game = () => {\r\n  const [answerNumber, setAnswerNumber] = useState<number[]>([]);\r\n  const [curNumber, setCurNumber] = useState<number[]>([]);\r\n  const [numberList, setNumberList] = useState<number[][]>([]);\r\n  const [clickEnabled, setClickEnabled] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounted\");\r\n    updateAnswerNumber();\r\n  }, []);\r\n\r\n  const updateAnswerNumber = () => {\r\n    const arr: number[] = [];\r\n\r\n    // 정답\r\n    for (let i = 0; i < 3; ++i) {\r\n      const n = Math.floor(Math.random() * 10);\r\n      if (!arr.includes(n)) {\r\n        arr.push(n);\r\n      } else {\r\n        i -= 1;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    setAnswerNumber(arr);\r\n  };\r\n\r\n  const init = () => {\r\n    updateAnswerNumber();\r\n    setCurNumber([]);\r\n    setNumberList([]);\r\n  };\r\n\r\n  const onClickNumber = (number: number) => {\r\n    if (curNumber.length === 3) {\r\n      // 새로운 숫자가 들어옴\r\n      setCurNumber([number]);\r\n    } else if (!curNumber.includes(number)) {\r\n      const newNumber = [...curNumber, number];\r\n      setCurNumber(newNumber);\r\n\r\n      if (newNumber.length === 3) {\r\n        const newNumberList = [...numberList, newNumber];\r\n        //console.log(newNumberList);\r\n        setNumberList(newNumberList);\r\n        setClickEnabled(false);\r\n        setTimeout(() => {\r\n          setClickEnabled(true);\r\n        }, 1000);\r\n\r\n        // 정답 체크\r\n        if (answerNumber.join() === newNumber.join()) {\r\n          setTimeout(() => {\r\n            alert(\"승리!!!\");\r\n            init();\r\n          }, 1000);\r\n        } else if (newNumberList.length === 9) {\r\n          // 실패 체크\r\n          setTimeout(() => {\r\n            alert(\"실패!!!\");\r\n            init();\r\n          }, 1000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickBack = () => {\r\n    if (0 < curNumber.length && curNumber.length < 3) {\r\n      setCurNumber(curNumber.slice(0, curNumber.length - 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game d-flex flex-column\">\r\n      <h1 className=\"my-3\">숫자 야구 게임</h1>\r\n      <Answer number={curNumber} />\r\n      <Result answer={answerNumber} numberList={numberList} />\r\n      <Numbers\r\n        clickEnabled={clickEnabled}\r\n        onClickNumber={onClickNumber}\r\n        isShowBackButton={0 < curNumber.length && curNumber.length < 3}\r\n        onClickBack={onClickBack}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport \"./App.scss\";\r\nimport Game from \"./Game\";\r\n\r\nfunction App() {\r\n  const isMobile = true;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classNames(isMobile ? \"mobile-container\" : \"container\")}>\r\n        <Game />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}